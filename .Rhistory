source("~/11.Rmd")
source("~/Tut.Rmd")
source("~/Tut.Rmd")
source("~/11.Rmd")
source("~/11.Rmd")
source("~/11.Rmd")
source("~/11.Rmd")
source("~/11.Rmd")
source("~/11.Rmd")
source("~/11.Rmd")
source("~/11.Rmd")
source("~/11.Rmd")
source("~/11.Rmd")
source("~/11.Rmd")
getwd()
menu <- read.csv("menu.csv")
Pro_avg <- menu %>% select(Category,Item,Protein) %>% group_by(Category) %>%
aggregate(Protein~Category, FUN = mean)
Pro_avg <- menu %>%
select(Category,Item,Protein) %>%
group_by(Category) %>%
aggregate(Protein~Category,
FUN = mean)
library(dplyr)
library(tidyverse)
library(GGally)
Pro_avg <- menu %>%
select(Category,Item,Protein) %>%
group_by(Category) %>%
aggregate(Protein~Category,
FUN = mean)
Pro_avg
#Chicken & Fish, Beef & pork contain higher protein content in every menu item
source("~/R-Exploration-Visualisation/docs/index.Rmd")
source("~/R-Exploration-Visualisation/docs/index.Rmd")
source("~/R-Exploration-Visualisation/docs/index.Rmd")
source("~/R-Exploration-Visualisation/docs/index.Rmd")
source("~/R-Exploration-Visualisation/docs/index.Rmd")
source("~/R-Exploration-Visualisation/docs/Project.Rmd")
source("~/R-Exploration-Visualisation/docs/Project.Rmd")
source("~/R-Exploration-Visualisation/docs/Project.Rmd")
source("~/R-Exploration-Visualisation/docs/Project.Rmd")
source("~/R-Exploration-Visualisation/docs/Project.Rmd")
source("~/R-Exploration-Visualisation/docs/Project.Rmd")
source("~/R-Exploration-Visualisation/docs/Project.Rmd")
source("~/R-Exploration-Visualisation/docs/Project.Rmd")
source("~/R-Exploration-Visualisation/docs/Project.Rmd")
source("~/R-Exploration-Visualisation/docs/Project.Rmd")
source("~/R-Exploration-Visualisation/docs/Project.Rmd")
source("~/R-Exploration-Visualisation/docs/Project.Rmd")
source("~/R-Exploration-Visualisation/docs/Project.Rmd")
source("~/R-Exploration-Visualisation/docs/Project.Rmd")
source("~/R-Exploration-Visualisation/docs/Project.Rmd")
source("~/11.Rmd")
library(dplyr)
library(tidyverse)
library(GGally)
menu <- read.csv("menu.csv")
cat <- menu %>%
select(Category) %>%
count(Category,name = "Total")  %>%
distinct()
cat_plot <- cat %>%
ggplot(aes(Category,
Total,
fill = Category)) +
geom_col() +
theme_classic() +
labs(title = "Total Categories") +
theme(legend.position = "none") +
geom_text(aes(label = Total),
position = position_stack(vjust = 0.5),
color ="black", size = 3) + coord_flip()
cat_plot
Pro_avg <- menu %>%
select(Category,Item,Protein) %>%
group_by(Category) %>%
aggregate(Protein~Category,
FUN = mean)
Pro_avg
max_pro <- menu %>%
select(Item,Protein) %>%
group_by(Item) %>%
arrange(desc(Protein)) %>%
head(15) %>%
ggplot(aes(x= reorder(Item,
Protein),
fill = Item)) +
geom_bar(stat = "identity",
aes(y= Protein )) +
coord_flip() +
theme_bw()+
geom_text(aes(label = Protein,
y= Protein),
position = position_stack(vjust = 0.5),
color = "Black",
size = 3)+
theme(legend.position="none") +
ggtitle("TOP 15 McDonald's Menu Item with the Highest Protein Content") +theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
max_pro
min_pro <- menu %>%
select(Item,Protein) %>%
group_by(Item, Protein) %>%
filter(Protein >0 )%>%
arrange(Protein) %>%
head(15)  %>%
ggplot(aes(x= reorder(Item,
Protein),
fill = Item)) +
geom_bar(stat = "identity",
aes(y= Protein )) +
coord_flip() +
theme_bw()+
geom_text(aes(label = Protein,
y= Protein),
position = position_stack(vjust = 0.5),
color = "Black",
size = 3)+
ggtitle("TOP 10 McDonald's Menu Item with the Least Protein")+
theme(legend.position="none")
min_pro
cal <- menu %>%
select(Category,
Item,
Calories) %>%
group_by(Category)
cal_plot <- cal %>%
ggplot(aes(Calories,
Category,
fill = Category)) +
geom_boxplot() +
theme_classic() +
scale_fill_brewer(palette = "Set1") + ggtitle("Calorie Content per Menu Category")
cal_plot
max_cal <- menu %>%
select(Category,
Item,
Calories) %>%
group_by(Item) %>%
arrange(desc(Calories))%>%
head(10)%>%
ggplot(aes(Calories,
y = reorder(Item,
Calories)
,fill =Item)) +
geom_col() +
theme_classic()+
theme(legend.position = "none") +
geom_text(aes(label = Calories),
position = position_stack(vjust = 0.5),
color="black", size =3) + ggtitle("TOP 10 McDonald's Menu Item with the Highest Calorie Content")
max_cal
min_cal <- menu %>%
select(Category,
Item,
Calories)%>%
filter(Calories>0) %>%
group_by(Item) %>%
arrange(Calories)%>%
head(10) %>%
ggplot(aes(Calories,
y = reorder(Item,
Calories),
fill =Item)) +
geom_col() +
theme_classic()+
theme(legend.position = "none") +
geom_text(aes(label = Calories),
position = position_stack(vjust = 0.5),
color="black", size =3) +
scale_fill_brewer(palette = "Set3") + ggtitle("TOP 10 McDonald's Menu Item with Low Calorie Content")
min_cal
carb <- menu %>%
select(Category,
Item,
Carbohydrates)%>%
group_by(Category)
carb_plot<- carb %>%
ggplot(aes(Category,Carbohydrates,
fill = Category)) +
geom_boxplot() +
scale_fill_brewer(palette = "Set1") + coord_flip() + theme_classic() + ggtitle("Menu Category with the Highest Carbohydrates Content")
carb_plot
sugar <- menu %>%
select(Category,Item,Sugars) %>%
group_by(Category)
max_sugar <-sugar %>%
arrange(desc(Sugars)) %>%
head(10) %>%
ggplot(aes(Sugars,
y=reorder(Item,
Sugars),
fill = Sugars)) +
geom_col() +
theme_classic()+
theme(legend.position = "none") +
geom_text(aes(label = Sugars),
position = position_stack(vjust = 0.5)) + ggtitle("Top 10 Menu items with the Highest Sugar Content")
max_sugar
min_sugar <- sugar %>%
filter(Sugars>0) %>%
arrange(Sugars) %>%
head(10) %>%
ggplot(aes(Sugars,
y=reorder(Item,
Sugars),
fill = Sugars)) +
geom_col() +
theme_classic()+
theme(legend.position = "none") +
geom_text(aes(label = Sugars),
position = position_stack(vjust = 0.5)) + ggtitle("Top 10 Menu items with the Lowest sugar Content")
min_sugar
healthy_carbs <-  menu %>%
select(Carbohydrates,
Category,
Sugars,
Dietary.Fiber)  %>%
filter(Dietary.Fiber > Sugars)
healthy_carbs_plot <- healthy_carbs %>%
ggplot(aes(Carbohydrates,
y = reorder(Category,Carbohydrates),
fill = Category)) +
geom_boxplot() + ggtitle("Healthy Carbs") + theme_classic()
healthy_carbs_plot
sodium  <- menu %>%
select(Category,
Item,Sodium,
Sodium....Daily.Value.) %>%
group_by(Category)
sodium_plot <- sodium %>%
ggplot(aes(Sodium,
Category,
fill = Category)) +
geom_boxplot() + theme_classic() + ggtitle("Menu Categories grouped by sodium content")
sodium_plot
trans_fat <- menu %>%
select(Category,
Trans.Fat) %>%
group_by(Category)
trans_plot <- trans_fat %>%
ggplot(aes(Trans.Fat,
Category,
fill = Category)) +
geom_boxplot() + theme_classic() +  ggtitle("Menu Categories grouped by trans_fat content")
trans_plot
calories <- menu %>%
select(Calories,
Carbohydrates,
Protein,
Total.Fat) %>%
group_by(Calories)
calories_plot <- ggcorr(calories,
method =  c("everything", "pearson"),
label = TRUE)  + theme_classic() +  ggtitle("Correlation of Calories and Macro-Nutrients")
calories_plot
source("~/11.Rmd")
source("~/11.Rmd")
source("~/11.Rmd")
source("~/11.Rmd")
source("~/11.Rmd")
source("~/11.Rmd")
source("~/11.Rmd")
source("~/R-Exploration-Visualisation/docs/Project.Rmd")
source("~/R-Exploration-Visualisation/docs/Project.Rmd")
source("~/R-Exploration-Visualisation/docs/Project.Rmd")
source("~/R-Exploration-Visualisation/docs/Project.Rmd")
source("~/R-Exploration-Visualisation/docs/Project.Rmd")
source("~/R-Exploration-Visualisation/docs/Project.Rmd")
source("~/R-Exploration-Visualisation/docs/Project.Rmd")
source("~/R-Exploration-Visualisation/docs/Project.Rmd")
source("~/R-Exploration-Visualisation/docs/Project.Rmd")
